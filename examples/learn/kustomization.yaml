apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namePrefix: custom-prefix-

nameSuffix: -custom-suffix

namespace: kustomize-namespace

commonAnnotations:
  oncallPager: 800-555-1212

commonLabels:
  someName: someValue
  owner: alice
  app: bingo

labels:
  - pairs:
      someName: someValue
      owner: alice
      app: bingo
    includeSelectors: true # <-- false by default
    includeTemplates: true # <-- false by default

buildMetadata: [managedByLabel, originAnnotations, transformerAnnotations]

crds:
  - crds/typeA.yaml
  - crds/typeB.yaml

generatorOptions:
  # labels to add to all generated resources
  labels:
    kustomize.generated.resources: somevalue
  # annotations to add to all generated resources
  annotations:
    kustomize.generated.resource: somevalue
  # disableNameSuffixHash is true disables the default behavior of adding a
  # suffix to the names of generated resources that is a hash of
  # the resource contents.
  disableNameSuffixHash: true
  # if set to true, the immutable property is added to generated resources
  immutable: true

resources:
  - { pathOrUrl }
  - ...

replicas:
  - name: deployment-name
    count: 5

patches:
  #########
  - path: patch.yaml
    target:
      group: apps
      version: v1
      kind: Deployment
      name: deploy.*
      labelSelector: "env=dev"
      annotationSelector: "zone=west"
    options:
      allowNameChange: true
      allowKindChange: true
  #########
  - patch: |-
      - op: replace
        path: /some/existing/path
        value: new value
    target:
      kind: MyKind
      labelSelector: "env=dev"
    options:
      allowNameChange: true
      allowKindChange: true
  #########
  - patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: dummy-app
        labels:
          app.kubernetes.io/version: 1.21.0
  #########
  - patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: not-used
      spec:
        template:
          spec:
            containers:
              - name: nginx
                image: nginx:1.21.0
    target:
      labelSelector: "app.kubernetes.io/name=nginx"
  #########
  - patch: |-
      - op: add
        path: /metadata/labels/app.kubernetes.io~1version
        value: 1.21.0
    target:
      group: apps
      version: v1
      kind: Deployment
  #########
  - patch: |-
      - op: replace
        path: /spec/template/spec/containers/0/image
        value: nginx:1.21.0
    target:
      labelSelector: "app.kubernetes.io/name=nginx"
  #########
  - path: add-label.patch.yaml
  - path: fix-version.patch.yaml
    target:
      labelSelector: "app.kubernetes.io/name=nginx"
  #########
  - path: add-label.patch.json
    target:
      group: apps
      version: v1
      kind: Deployment
  - path: fix-version.patch.yaml
    target:
      labelSelector: "app.kubernetes.io/name=nginx"

patchesJson6902:
  - target:
      version: v1
      kind: Deployment
      name: my-deployment
    path: add_init_container.yaml
  - target:
      version: v1
      kind: Service
      name: my-service
    path: add_service_annotation.yaml
  - target:
      version: v1
      kind: Deployment
      name: my-deployment
    patch: |-
      - op: add
        path: /some/new/path
        value: value
      - op: replace
        path: /some/existing/path
        value: "new value"

patchesStrategicMerge:
  - service_port_8888.yaml
  - deployment_increase_replicas.yaml
  - deployment_increase_memory.yaml
  - |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx
    spec:
      template:
        spec:
          containers:
            - name: nginx
              image: nignx:latest

images:
  - name: postgres
    newName: my-registry/my-postgres
    newTag: v1
  - name: nginx
    newTag: 1.8.0
  - name: my-demo-app
    newName: my-app
  - name: alpine
    digest: sha256:24a0c4b4a4c0eb97a1aabb8e29f18e917d05abfe1b7a7c07857230879ce7d3d3

configMapGenerator:
  - name: my-java-server-props
    behavior: merge
    files:
      - application.properties
      - more.properties
      - myFileName.ini=whatever.ini
  - name: my-java-server-env-vars
    literals:
      - JAVA_HOME=/opt/java/jdk
      - JAVA_TOOL_OPTIONS=-agentlib:hprof
    options:
      disableNameSuffixHash: true
      labels:
        pet: dog
  - name: my-java-server-env-file-vars
    envs:
      - my-server-env.properties
      - more-server-props.env
  - name: dashboards
    files:
      - mydashboard.json
      - myFileName.ini=whatever.ini
    options:
      annotations:
        dashboard: "1"
      labels:
        app.kubernetes.io/name: "app1"

secretGenerator:
  - name: app-tls
    files:
      - secret/tls.crt
      - secret/tls.key
    type: "kubernetes.io/tls"
  - name: app-tls-namespaced
    # you can define a namespace to generate
    # a secret in, defaults to: "default"
    namespace: apps
    files:
      - tls.crt=catsecret/tls.crt
      - tls.key=secret/tls.key
    type: "kubernetes.io/tls"
  - name: env_file_secret
    envs:
      - env.txt
    type: Opaque
  - name: secret-with-annotation
    files:
      - app-config.yaml
    type: Opaque
    options:
      annotations:
        app_config: "true"
      labels:
        app.kubernetes.io/name: "app2"

generators:
  - { pathOrUrl }
  - ...

transformers:
  - { pathOrUrl }
  - ...

validators:
  - { pathOrUrl }
  - ...

openapi:
  path: my_schema.json
  version: v1.20.4
# sortOptions:
#   order: fifo
# sortOptions:
#   order: legacy
#   legacySortOptions:
#     orderFirst:
#     - Namespace
#     - ResourceQuota
#     - StorageClass
#     - CustomResourceDefinition
#     - ServiceAccount
#     - PodSecurityPolicy
#     - Role
#     - ClusterRole
#     - RoleBinding
#     - ClusterRoleBinding
#     - ConfigMap
#     - Secret
#     - Endpoints
#     - Service
#     - LimitRange
#     - PriorityClass
#     - PersistentVolume
#     - PersistentVolumeClaim
#     - Deployment
#     - StatefulSet
#     - CronJob
#     - PodDisruptionBudget
#     orderLast:
#     - MutatingWebhookConfiguration
#     - ValidatingWebhookConfiguration
