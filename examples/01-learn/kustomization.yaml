apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization # 参考 type Kustomization struct
resources:
  - pod.yaml
  - service.yaml
  - https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.1/deploy/static/provider/cloud/deploy.yaml
  - ../../base
# bases:  // Deprecated: Anything that would have been specified here should be specified in the Resources field instead.
configMapGenerator:
  - name: app-cm
    literals:
      - MY_CONFIG_1=config one
      - MY_CONFIG_2=config two
secretGenerator:
  - name: app-secret
    envs:
      - secrets.properties
generatorOptions:
  labels: # adds labels to the generated resources
    my.label: mylabel
  annotations: # adds annotations to the generated resources
    my.annotation: myannotation
  disableNameSuffixHash: true # disables the suffix generation
  immutable: true # marks the resources as immutable
images:
  - name: nginx
    newTag: 1.21.6
  - name: app
    newName: app
    newTag: 68b4c528
# imageTags:  // Deprecated: Use the Images field instead.
replicas:
  - name: another-app
    count: 3
namePrefix: myprefix-
nameSuffix: -mysuffix
namespace: my-namespace
commonLabels:
  my.label: mylabel
commonAnnotations:
  my.annotation: myannotation
patchesStrategicMerge:
  - patch-pod.yaml
  - service_port_8888.yaml
  - deployment_increase_replicas.yaml
  - deployment_increase_memory.yaml
  - |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx
    spec:
      template:
        spec:
          containers:
            - name: nginx
              image: nignx:latest
patches:
  - patch: |-
      $patch: delete
      apiVersion: v1
      kind: Service
      metadata:
        name: myapp
    #########
  - path: patch.yaml
    target:
      group: apps
      version: v1
      kind: Deployment
      name: deploy.*
      labelSelector: "env=dev"
      annotationSelector: "zone=west"
    options:
      allowNameChange: true
      allowKindChange: true
  #########
  - patch: |-
      - op: replace
        path: /some/existing/path
        value: new value
    target:
      kind: MyKind
      labelSelector: "env=dev"
    options:
      allowNameChange: true
      allowKindChange: true
  #########
  - patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: dummy-app
        labels:
          app.kubernetes.io/version: 1.21.0
  #########
  - patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: not-used
      spec:
        template:
          spec:
            containers:
              - name: nginx
                image: nginx:1.21.0
    target:
      labelSelector: "app.kubernetes.io/name=nginx"
  #########
  - patch: |-
      - op: add
        path: /metadata/labels/app.kubernetes.io~1version
        value: 1.21.0
    target:
      group: apps
      version: v1
      kind: Deployment
  #########
  - patch: |-
      - op: replace
        path: /spec/template/spec/containers/0/image
        value: nginx:1.21.0
    target:
      labelSelector: "app.kubernetes.io/name=nginx"
  #########
  - path: add-label.patch.yaml
  - path: fix-version.patch.yaml
    target:
      labelSelector: "app.kubernetes.io/name=nginx"
  #########
  - path: add-label.patch.json
    target:
      group: apps
      version: v1
      kind: Deployment
  - path: fix-version.patch.yaml
    target:
      labelSelector: "app.kubernetes.io/name=nginx"
patchesJson6902:
  - target:
      version: v1
      kind: Pod
      name: myapp
    path: patch.yaml
  - target:
      version: v1
      kind: Deployment
      name: my-deployment
    path: add_init_container.yaml
  - target:
      version: v1
      kind: Service
      name: my-service
    path: add_service_annotation.yaml
  - target:
      version: v1
      kind: Deployment
      name: my-deployment
    patch: |-
      - op: add
        path: /some/new/path
        value: value
      - op: replace
        path: /some/existing/path
        value: "new value"
crds:
  - crd.json
  - crds/typeA.yaml
  - crds/typeB.yaml
vars:
  - name: MY_SERVICE_NAME
    objref:
      name: myapp
      kind: Service
      apiVersion: v1
    fieldref:
      fieldpath: metadata.name
replacements:
  - path: replacement.yaml
  - source:
      name: myapp
      kind: Service
      version: v1
    targets:
      - select:
          kind: Pod
          name: myapp
        fieldPaths:
          - spec.containers.[name=myapp].args.1
labels:
  - pairs:
      someName: someValue
      owner: alice
      app: bingo
    includeSelectors: true # <-- false by default
    includeTemplates: true # <-- false by default
buildMetadata: [managedByLabel, originAnnotations, transformerAnnotations]
openapi:
  path: my_schema.json
  version: v1.20.4
# sortOptions:
#   order: fifo
# sortOptions:
#   order: legacy
#   legacySortOptions:
#     orderFirst:
#     - Namespace
#     - ResourceQuota
#     - StorageClass
#     - CustomResourceDefinition
#     - ServiceAccount
#     - PodSecurityPolicy
#     - Role
#     - ClusterRole
#     - RoleBinding
#     - ClusterRoleBinding
#     - ConfigMap
#     - Secret
#     - Endpoints
#     - Service
#     - LimitRange
#     - PriorityClass
#     - PersistentVolume
#     - PersistentVolumeClaim
#     - Deployment
#     - StatefulSet
#     - CronJob
#     - PodDisruptionBudget
#     orderLast:
#     - MutatingWebhookConfiguration
#     - ValidatingWebhookConfiguration
components: # 参考 type Kustomization struct
  - ../components/common-annotations
configurations:
  # configuration for transformers
  # 参考 examples/transformerconfigs
  - configuration.yaml
##################################################################################################################
transformers:
  - transformers.yaml
generators:
  - generators.yaml
validators:
  - validators.yaml
############# helm
# helmGlobals:
# helmCharts:
# helmChartInflationGenerator:

